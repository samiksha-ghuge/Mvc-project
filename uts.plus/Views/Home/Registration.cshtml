@model uts.plus.utsplu



@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Registration</title>
</head>
<body>
    <div class="container-fluid">
        @Html.Partial("_navbar")
        <div class="d-flex justify-content-center">
            @if (ViewBag.Status != null && Convert.ToBoolean(ViewBag.Status))
            {
                if (ViewBag.Message != null)
                {
                    <div class="alert alert-success">
                        <strong>Success!!</strong>@ViewBag.Message
                    </div>
                }

            }
            else
            {
                using (Html.BeginForm("Registration", "Home", FormMethod.Post))
                {
                    @Html.AntiForgeryToken()
                    <div class="row">
                        <div class="form-horizontal">
                            <h4 class="text-center text-sm-start"> Employee Registration Form</h4>

                            <hr />
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            <div class="col-12">

                                <div class="form-group">
                                    @if (ViewBag.Status1 != null && Convert.ToBoolean(ViewBag.Status1))
                                    {
                                        @Html.HiddenFor(x => x.Id)

                                    }
                                    <div class="col-md-12 mb-4">
                                        @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control", placeholder = "First Name" } })
                                        @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    <div class="col-md-12 mb-4">
                                        @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control", placeholder = "Last Name" } })
                                        @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                            </div>
                            <div class="form-group">

                                <div class="col-md-12 mb-4">
                                    @Html.EditorFor(model => model.EmailId, new { htmlAttributes = new { @class = "form-control", placeholder = "Email" } })
                                    @Html.ValidationMessageFor(model => model.EmailId, "", new { @class = "text-danger" })
                                    @Html.ValidationMessage("EmailExist", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">

                                <div class="col-md-12 mb-4">
                                    @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control", placeholder = "Phone Number" } })
                                    @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">

                                <div class="col-md-12 mb-4">

                                    @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control", placeholder = "Password" } })
                                    @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">

                                <div class="col-md-12 mb-4">
                                    @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control", placeholder = "Confirm Password" } })
                                    @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">

                                <div class="col-md-12 mb-4">
                                    @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control", placeholder = "Address" } })
                                    @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">

                                <div class="col-md-12 mb-4">
                                    @Html.EditorFor(model => model.Pincode, new { htmlAttributes = new { @class = "form-control", placeholder = "Pincode" } })
                                    @Html.ValidationMessageFor(model => model.Pincode, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-12 mb-4">

                                    @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })

                                    @Html.RadioButtonFor(model => model.Gender, "Male")
                                    Male
                                    @Html.RadioButtonFor(model => model.Gender, "Female")
                                    Female
                                </div>
                                <div>
                                    @Html.DropDownListFor(model => model.EmployeeType, new SelectList(Enum.GetValues(typeof(etype))), "Employee type", new { @class = "form-control" })

                                </div>
                            </div>
                            <div class="form-group mt-3">
                                @Html.LabelFor(model => model.DocumentsVerified)
                                @Html.EditorFor(model => model.DocumentsVerified)
                            </div>

                        </div>
                        <div class="form-group">
                            <div class="col-md-offset-2 d-grid mt-3">
                                <input type="submit" value="Register" class="btn btn-success register" />
                            </div>
                        </div>
                    </div>
                    @*  </div>*@

                    if (ViewBag.Message != null)
                    {
                        <div class="alert alert-danger">
                            <strong>Error!!</strong>@ViewBag.Message
                        </div>
                    }
                }
            }

        </div>
        @if (ViewBag.Status3==true)
         {
           <div>
               @Html.ActionLink("Back to index","Index","Account")
           </div>
         }
        else
        {
          <div>
            @Html.ActionLink("Back to Login", "Login")
        </div>
        }
        @Html.Partial("_footer")
    </div>
 
</body>
</html>
